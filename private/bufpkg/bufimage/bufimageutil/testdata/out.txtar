-- a.proto --
syntax = "proto2";

package pkg;

message Baz {
  extensions 3 to 4;

  optional Baz baz = 1;

  optional NestedBaz nested_baz = 2;

  message NestedBaz {
    optional Baz in_nested_baz = 1;
  }
}

extend Baz {
  optional string extended_field = 3;
}
-- b.proto --
syntax = "proto3";

package pkg;

import "a.proto";

message Bar {
  Baz baz = 1;
}
-- c.proto --
syntax = "proto3";

package pkg;

import weak "dependency.proto";

import "b.proto";

message Foo {
  Bar baz = 1;

  dependency.Dep d = 2;

  FooEnum foo_enum = 3;
}

enum FooEnum {
  X = 0;
}
-- dependency.proto --
syntax = "proto3";

package dependency;

message Dep {
}
-- s.proto --
syntax = "proto3";

package pkg;

import "c.proto";

import "a.proto";

service Quux {
  rpc Do ( Foo ) returns ( Baz );
}
